package IO;
//1、字节流 InputStream，OutStream（8位字节），传输音乐，文本等。中文会乱码
//2、字符流 Reader，Writer（16位unicode码），传输中文（一般两个字节）不会乱码
//3、带缓冲区必须flush；不带缓冲区close可以充当flush

import java.io.*;

public class IOTest {
    public static void main(String[] args) {
//        new IOTest().CopyFile();
//        new IOTest().ReaderTest();
        new IOTest().WriterTest();

    }
    //使用Writer将内容写到文件中
    public void WriterTest() {
        //建立文件地址
        File file = new File("D://java/dest.txt");
        //创建流
        Writer writer = null;
        try {
            writer = new FileWriter(file);
            writer.write("123");
            writer.write("哈哈哈");

            //在输出流关闭前，先flush，将数据写入。
            writer.flush();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                writer.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
    //使用Reader将文件中内容读取
    public void ReaderTest() {
        Reader reader = null;
        try {
            //新建流
            reader = new FileReader("D://java/src.txt");
            //设置缓冲区
            char[] buffer = new char[1024];
            //完成数据传输
            int length = 0;
            while ((length = reader.read(buffer)) != -1) {
                System.out.println(new String(buffer, 0, length));
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                reader.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    //测试复制文本文档，使用FileInputStream
    public void CopyFile() {
        //定义源文件地址
        File src = new File("D://java/src.txt");
        //定义目标文件地址
        File dest = new File("D://java/dest.txt");
        InputStream inputStream = null;
        OutputStream outputStream = null;

        try {
            //创建输入流对象
            inputStream = new FileInputStream(src);
            //创建输出流对象
            outputStream = new FileOutputStream(dest);

            //无法确定文件大小，使用缓冲的方式
            byte[] buffer = new byte[1024];

            //完成数据传输
            int length = 0;
            while ((length = inputStream.read(buffer)) != -1) {
                outputStream.write(buffer);
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                outputStream.close();
                inputStream.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
}
