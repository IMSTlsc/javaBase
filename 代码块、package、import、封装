1、代码块
*代码块是使用{}括起来的一段代码，代码块中可以定义类
* 普通代码块：定义在方法中，可以多次执行。
* 构造代码块：定义在类中，每次运行时会将构造代码块添加到构造方法中的第一行，当构造方法中使用this时不添加。
* 静态代码块：使用static{}的代码，属于类，不能定义在方法中，加载类时已经运行。常用于数据库链接等。静态代码块随着类的加载而执行，只执行一次，执行完就销毁。
             例如：若在父类中创建子类实例，执行父类中main，父类中的静态代码块在main时执行。创建子类实例时不会再执行。
* 同步代码块：在多线程时使用，用来给共享空间进行加锁操作
* 静态-构造-普通
 */
public class CodeBlock {
    {
        System.out.println("构造代码块块");
    }
    static
    {
        System.out.println("静态代码块");
    }
    public void test()
    {
        System.out.println("普通代码块");

        {
            System.out.println("我是普通代码块");
        }
    }
    public static void main(String[] args) {
        new CodeBlock().test();
    }
}
2、package
package 域名倒写
3、import 包名.类名
当使用多个同名类时，只能选择导入一个，另一个使用完全名字。
静态导包 import static java.lang.Math.*; 使用Math中的方法可以直接abs(-1)，不必Math.abs(-1)。优先使用当前类中abs()方法。
4、封装
封装、继承、多态是面向对象的三大特征。将类的某个信息隐藏在类的内部（private），不允许直接访问，而是通过该类提供的方法进行操作。
在方法中可以进行判断，以保证数据操作的合理性。具有低耦合，高内聚的优点
